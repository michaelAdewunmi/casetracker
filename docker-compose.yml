version: '3.7'

services:
  wordpress:
    image: 'wordpress:5.5.0-php7.4-apache'
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      VIRTUAL_HOST: '${DOCKER_DEV_DOMAIN:-casetracker.local}'
      COMPOSE_CONVERT_WINDOWS_PATHS: '1'
      WORDPRESS_DB_HOST: 'mysql'
      WORDPRESS_DB_NAME: 'wordpress'
      WORDPRESS_DB_PASSWORD: ''
      WORDPRESS_DB_USER: 'root'
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9000 remote_enable=1
    depends_on:
      - 'mysql'
    networks:
      - 'front'
      - 'back'
      # - 'mail'
    volumes:
      - '/C/Users/micha/Desktop/Projects/mydockerfiles/casetracker:/var/www/html:rw'
      - '.:/var/www/html/wp-content/plugins/case-tracker:ro'
  wp-cli:
    image: 'wordpress:cli-${WP_CLI_VERSION:-2.4.0}-php${PHP_VERSION:-7.4}'
    environment:
      - COMPOSE_CONVERT_WINDOWS_PATHS='1'
      - APACHE_RUN_USER='www-data'
      - APACHE_RUN_GROUP='www-data'
    depends_on:
      - 'mysql'
    networks:
      - 'back'
    volumes:
      - '/C/Users/micha/Desktop/Projects/mydockerfiles/casetracker:/var/www/html:rw'
      - './bin/install-wp.sh:/usr/local/bin/install-wp:ro'
      - '.:/var/www/html/wp-content/plugins/case-tracker:ro'
  mysql:
    image: 'mariadb'
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_DATABASE: 'wordpress'
    networks:
      - 'back'
  proxy:
    image: 'jwilder/nginx-proxy:alpine'
    ports:
      - '80:80'
    networks:
      front:
        aliases:
          - '${DOCKER_DEV_DOMAIN:-casetracker.local}'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
networks:
  front: {}
  back: {}
  # mail:
    # external: true  # which also means this network must exist already before this container is run
    # name: mail  # the name is nnecessary or the container will look for currentdirectoryname_mail
volumes:
  wp: {}